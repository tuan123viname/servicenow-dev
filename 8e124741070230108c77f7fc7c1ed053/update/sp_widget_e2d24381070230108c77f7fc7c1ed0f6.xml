<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function($scope) {
  /* widget controller */
  var c = this;


  $scope.getDriveFile = function() {
    c.data.action = "get_drive_file";
    c.server.update();
  }

  $scope.refreshToken = function() {
    c.data.action  ="refresh_token";
    c.server.update();
  }
  
  $scope.downloadCSVFile = function() {
    c.data.action  ="download_CSV_file";
    c.server.update();
  }
  $scope.getCSVFiles = function() {
    c.data.action  ="get_CSV_files";
    c.server.update();
  }
};]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>oauth2</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Oauth2</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
  var GR_token_track = new GlideRecord('x_613320_google_in_token_track');
  GR_token_track.query();
  if (GR_token_track.next()) {
    data.token = GR_token_track.getValue('access_token');
    data.refresh_token = GR_token_track.getValue('refresh_token');
  }
  
 
  var code = $sp.getParameter('code');

  if (code) {
    
    var request = new sn_ws.RESTMessageV2();
    request.setEndpoint('https://oauth2.googleapis.com/token');
    request.setHttpMethod('POST');
    request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');

    var requestBody = "redirect_uri=https://dev67130.service-now.com/gg?id=oauth2&grant_type=authorization_code&client_secret=ncbpLdDcvBHbbZ378VBtueus&client_id=1079638961967-u14p7rm1acjghidd98t3qp9kcrnlrodn.apps.googleusercontent.com&code="+code;
    
    request.setRequestBody(requestBody);
    var response = request.execute();
    var body = JSON.parse(response.getBody());
   
    GR_token_track = new GlideRecord('x_613320_google_in_token_track');
    GR_token_track.query();
    if (GR_token_track.next()) {
      GR_token_track.access_token = body.access_token;
      GR_token_track.expired = false;
      if (body.refresh_token) {
        GR_token_track.refresh_token = body.refresh_token;
      }
      GR_token_track.update();
    }
    else {
      GR_token_track.initialize();
      GR_token_track.access_token = body.access_token;
      GR_token_track.refresh_token = body.refresh_token;
      GR_token_track.expired = false;
      GR_token_track.insert();
    }
  }

  if (input) {
    if (input.action == 'get_drive_file') {
      var request = new sn_ws.RESTMessageV2();
      request.setEndpoint('https://www.googleapis.com/drive/v3/files/17ImoqUVI3aSleZycgcs2AKYbD5Gi6T8DyiXNNNurWBM/export');
      request.setHttpMethod('GET');
      request.setRequestHeader('Content-Type', 'application/json');
      request.setQueryParameter('mimeType', "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
      request.setRequestHeader('Authorization', "Bearer " + data.token);
      request.saveResponseBodyAsAttachment('x_613320_google_in_weebpal_log_time_schedule_job','d9382415070630108c77f7fc7c1ed05e', 'import.xlsx');
      var response = request.execute();
			var newAttachmentSysId= response.getResponseAttachmentSysid();
      console.log(newAttachmentSysId);
      console.log(response.getStatusCode());
    }
    
   if (input.action == "refresh_token") {
    var request = new sn_ws.RESTMessageV2('Exchange authorization code for refresh','Refresh token');
    request.setHttpMethod('POST');
    request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
    request.setStringParameterNoEscape('refresh_token', data.refresh_token);
    request.setStringParameterNoEscape('grant_type', 'refresh_token');
    request.setStringParameterNoEscape('client_id', '1079638961967-u14p7rm1acjghidd98t3qp9kcrnlrodn.apps.googleusercontent.com');
    request.setStringParameterNoEscape('client_secret', 'ncbpLdDcvBHbbZ378VBtueus');
    var response = request.execute();
    var body = JSON.parse(response.getBody());
    
    GR_token_track.access_token = body.access_token;
    GR_token_track.expired = false;
    GR_token_track.update();
   }
   if (input.action == 'download_CSV_file') {
    var request = new sn_ws.RESTMessageV2();
    request.setEndpoint('https://docs.google.com/spreadsheets/d/17ImoqUVI3aSleZycgcs2AKYbD5Gi6T8DyiXNNNurWBM/export?format=xlsx&id=17ImoqUVI3aSleZycgcs2AKYbD5Gi6T8DyiXNNNurWBM&gid=1006502702');
    request.setHttpMethod('GET');
    // request.setRequestHeader('Content-Type', 'application/json');
    // request.setQueryParameter('mimeType', "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
    request.setRequestHeader('Authorization', "Bearer " + data.token);
    request.saveResponseBodyAsAttachment('x_613320_google_in_weebpal_log_time_schedule_job','d9382415070630108c77f7fc7c1ed05e', 'file.xlsx');
    var response = request.execute();
  
    var newAttachmentSysId= response.getResponseAttachmentSysid();
    console.log(newAttachmentSysId);
    console.log(response.getStatusCode());
   }

   if (input.action == 'get_CSV_files') {
    var request = new sn_ws.RESTMessageV2();
    request.setEndpoint('https://sheets.googleapis.com/v4/spreadsheets/17ImoqUVI3aSleZycgcs2AKYbD5Gi6T8DyiXNNNurWBM');
    request.setHttpMethod('GET');
    request.setRequestHeader('Content-Type', 'application/json');
    request.setRequestHeader('Authorization', "Bearer " + data.token);
    var response = request.execute();
    console.log(response.getStatusCode());
    var sheets = JSON.parse(response.getBody())['sheets'];
    var gr = new GlideRecord('x_613320_google_in_import_sheet_track');
    sheets.forEach(function(item) {
      if (item.properties) {
   
        gr.addQuery('sheet_id', item['properties']['sheetId']);
        gr.query();
        if (!gr.next()) {
          gr.initialize();
          gr.sheet_id = item['properties']['sheetId'];
          gr.index = item['properties']['index'];
          gr.sheet_type = item['properties']['sheetType'];
          gr.title = item['properties']['title'];
          gr.status = 'open';
          gr.insert();
        }
      }
     
    })
   }
  }
  

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-08-17 02:22:45</sys_created_on>
        <sys_id>e2d24381070230108c77f7fc7c1ed0f6</sys_id>
        <sys_mod_count>68</sys_mod_count>
        <sys_name>Oauth2</sys_name>
        <sys_package display_value="Google integration" source="x_613320_google_in">8e124741070230108c77f7fc7c1ed053</sys_package>
        <sys_policy/>
        <sys_scope display_value="Google integration">8e124741070230108c77f7fc7c1ed053</sys_scope>
        <sys_update_name>sp_widget_e2d24381070230108c77f7fc7c1ed0f6</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-08-31 03:31:45</sys_updated_on>
        <template><![CDATA[<div>
<!-- your widget template -->
<a href="https://accounts.google.com/o/oauth2/v2/auth?
scope=https://www.googleapis.com/auth/spreadsheets&
access_type=offline&
include_granted_scopes=true&
response_type=code&
state=state_parameter_passthrough_value&
redirect_uri=https://dev67130.service-now.com/gg?id=oauth2&
client_id=1079638961967-u14p7rm1acjghidd98t3qp9kcrnlrodn.apps.googleusercontent.com&approval_prompt=force">Login with Google</a>
</div>


<br>
<button ng-click = "getDriveFile()">
  Get drive files
</button>

<button ng-click = "refreshToken()">
  Refresh token
</button>
<button ng-click = "downloadCSVFile()">
  Download CSV file
</button>
<button ng-click = "getCSVFiles()">Get csv list in sheet</button>]]></template>
    </sp_widget>
</record_update>
